version: "3.4"

services:
  db:
    image: mysql:latest
    container_name: db_con
    ports:
      - "3306:3306"
    volumes:
      - /home/kazi/Ubuntu_WSL/Login_app_CICD_docker/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - /home/kazi/Ubuntu_WSL/Login_app_CICD_docker/data:/var/lib/mysql

    env_file: .env

    # Different way to set envireoment variable
    # environment:
    #   MYSQL_HOST: db
    #   MYSQL_USER: flask
    #   MYSQL_PASSWORD: 12345678
    #   MYSQL_DATABASE: geeklogin
    #   MYSQL_PORT: 3306

    networks:
      - my_network



  web:
    image: web:v2
    container_name: web_con
    build:
      context: ./app
      dockerfile: Dockerfile
      
    ports:
      - "5000:5000"

    env_file: .envversion: '3'

services:
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: geeklogin
      MYSQL_USER: flask
      MYSQL_PASSWORD: 12345678
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql

  web:
    build: .
    command: flask run --host=0.0.0.0
    ports:
      - "5000:5000"
    environment:
      - MYSQL_HOST=db
      - MYSQL_USER=flask
      - MYSQL_PASSWORD=12345678
      - MYSQL_DATABASE=geeklogin
      - MYSQL_PORT=3306
    depends_on:
      - db
    volumes:
      - .:/app



    networks:
      - my_network


  # unit-test-container:
  #   image: unit-test-container
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #     target: test
  # env_file: .env


networks:
  my_network: