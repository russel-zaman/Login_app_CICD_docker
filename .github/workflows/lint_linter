name: Python Flask Application

on:
  push:
    branches:
      - setup/codebase
  pull_request:
    branches:
      - dev

permissions:
  contents: read

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python 3.10 (for running tests and linting)
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # Install dependencies for linting and testing
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Fetch the latest changes from the main branch (for detecting changed files)
      - name: Fetch latest changes
        run: git fetch origin main --depth=1

      # Get the changed Python files between main and the current branch
      - name: Get changed files
        id: get_changed_files
        run: |
          CHANGED_FILES=$(git diff --name-only FETCH_HEAD HEAD -- '*.py')
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      # Lint with pylint (only for changed files)
      - name: Run linter
        run: |
          if [ -n "$CHANGED_FILES" ]; then
            pylint $CHANGED_FILES
          else
            echo "No Python files have changed."
          fi

      # Lint with flake8 (for all files)
      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Run tests with pytest
      - name: Test with pytest
        run: |
          pytest
